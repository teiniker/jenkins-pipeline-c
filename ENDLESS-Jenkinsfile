pipeline 
{
    agent any
    
    environment {
        NEXUS_CRED = 'nexus-endless'
    }
    
    stages 
    {
        stage('build') 
        {
          agent {
            docker { image "${env.NEXUS_URL_DOCKER}/repository/docker/docker-c-image" 
            }
 
            }
            steps 
            {
                echo 'Build stage: compile all code and build an executable' 
                sh 'uname -a'
                sh 'make'
            }
        }
      
        stage('test') 
        {
          agent {
            docker { image "${env.NEXUS_URL_DOCKER}/repository/docker/docker-c-image"

            }
            }
            steps 
            {
                echo 'Test stage: run the test cases' 
               	sh 'build/stack_test'
            }
        }

        stage('sca') 
        {
            agent {
                docker { image "${env.NEXUS_URL_DOCKER}/repository/docker/docker-sca" }
            }
            steps 
            {
                script {
                    echo 'Static-analysis stage: run the cppcheck tool and upload db to Nexus' 
                    withCredentials([usernamePassword(credentialsId: 'nexus-endless', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh '''
                            python3 -m venv home/endless/venv
                            . /home/endless/venv/bin/activate
                            DB_NAME="${JOB_NAME}-cppcheck.db"
                            python -m utilitysca src/*.c cppcheck "$DB_NAME"
                            curl -v -u $DOCKER_USER:$DOCKER_PASSWORD --upload-file "$DB_NAME" $NEXUS_URL/repository/db/"$DB_NAME"
                            '''                        
                    }    
                }
            }

        }     
    }
    post 
    {
        always 
        {
            echo 'I will always execute this!'
        }
    }
}